AWSTemplateFormatVersion: 2010-09-09

Description: Creates a CloudFront distribution for the static documentation website, hosted in an S3 bucket, with several domain name aliases.
  
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Parameters:
        - S3LogBucketName
        - CloudFrontLogBucketDomainName
        - DistributionOriginPath
        - AcmCertificateId
        - OriginAccessIdentityId

Parameters:
  S3LogBucketName:
    Type: String
    Default: danware-us-east-2-bucket-logs
    AllowedPattern: ^[a-z0-9.-]+$
    Description: The name of an existing bucket to which the documentation-hosting and domain-redirect S3 buckets will store logs (must be in the same region).
    ConstraintDescription: must contain only lowercase letters, numbers, periods (.), and dashes (-).
  CloudFrontLogBucketDomainName:
    Type: String
    Default: danware-us-east-2-cloudfront-logs.s3-us-east-2.amazonaws.com
    AllowedPattern: ^[a-z0-9.-]+$
    Description: "The domain name (not simple name) of an existing bucket to which the image-distributing CloudFront distribution will store logs.  Valid bucket domain names are described here: https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region"
    ConstraintDescription: must be a valid S3 bucket domain name (only lowercase letters, numbers, periods (.), dashes (-), no starting/ending dashes, etc.)
  DistributionOriginPath:
    Type: String
    Default: /v1.0.0
    AllowedPattern: ^/[\w.-][\w./-]+[\w.-]$
    Description: The path that CloudFront will use to request content from the documentation S3 bucket.  Must be a valid URL and that starts with a slash mark ("/") but does not end with a slash mark.
    ConstraintDescription: must contain only valid URL characters, must start with a slash mark ("/"), and must not end with a slash mark.
  AcmCertificateId:
    Type: String
    Default: 11111111-1111-1111-1111-111111111111
    AllowedPattern: ^[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}$
    Description: Id of the Certificate Manager certificate (not the whole ARN) that will be used by CloudFront to sign URLs.
    ConstraintDescription: must contain only lowercase hexadecimal digits in groups of 8, 4, 4, 4, then 12, separated by dashes ("-").
  OriginAccessIdentityId:
    Type: String
    Default: 1A1A1A1A1A1A1A
    AllowedPattern: ^[0-9A-Z]{14}$
    Description: Id of the origin access identity that will be used by CloudFront to access the hosting S3 bucket.  This is the SHORT Id in the CloudFront console...
    ConstraintDescription: must contain exactly 14 numbers and/or uppercase letters.

Resources:
  # S3 bucket for hosting the static documentation
  ComDocsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: dotkegg-docs
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucketName
        LogFilePrefix: docs/dotkegg/
      WebsiteConfiguration:
        #ErrorDocument: 
        IndexDocument: index.html
  DocsOriginAccessPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ComDocsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - # Allow the CloudFront origin access identity (only) to get objects in the host bucket 
          Sid: 1
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentityId}
          Action: s3:GetObject
          Resource: !Sub arn:aws:s3:::${ComDocsBucket}/*
        - # Allow the CloudFront origin access identity (only) to view the host bucket.  This way, we get 404 (not found) error instead of 403 (access denied) when users try to get non-existent objects in host bucket.
          Sid: 2
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentityId}
          Action: s3:ListBucket
          Resource: !Sub arn:aws:s3:::${ComDocsBucket}

  # CloudFront Distribution for the documentation site
  DocsDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - docs.dotkegg.net
        - docs.dotkegg.org
        - docs.dotkegg.com
        Comment: CloudFront Distribution for the DotKEGG documentation website.
        # CustomErrorResponses:
        DefaultCacheBehavior:
          AllowedMethods: [ HEAD, GET, OPTIONS ]
          CachedMethods: [ HEAD, GET, OPTIONS ]
          Compress: true    # Only if user adds "Accept-Encoding: gzip" header to their request
          DefaultTTL: 86400    # seconds, default, 1 day
          ForwardedValues:
            Cookies: { Forward: none }
            QueryString: false
          MaxTTL: 2592000      # seconds, ~1 month
          MinTTL: 0            # seconds, default
          SmoothStreaming: false
          TargetOriginId: dotkegg-docs-bucket
          ViewerProtocolPolicy: allow-all   # Allow HTTP or HTTPS
        DefaultRootObject: index.html
        Enabled: true
        Logging:
          Bucket: !Ref CloudFrontLogBucketDomainName
          IncludeCookies: true
          Prefix: cloudfront/docs/dotkegg/
        Origins:
        -
          DomainName: !GetAtt ComDocsBucket.DomainName
          Id: dotkegg-docs-bucket
          OriginPath: !Ref DistributionOriginPath
          S3OriginConfig:
            OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentityId}
        PriceClass: PriceClass_All
        Restrictions:
          GeoRestriction: { RestrictionType: none }
        ViewerCertificate:
          AcmCertificateArn: !Sub arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/${AcmCertificateId}
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only
        WebACLId: !Ref WebAcl
  WebAcl:
    Type: AWS::WAF::WebACL
    Properties:
      Name: DotKeggDocsWebAcl
      DefaultAction: { Type: ALLOW }
      MetricName: DotKeggDocsDistribution
      Rules: []

  # S3 buckets for web redirects
  NetBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: dotkegg.net
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucketName
        LogFilePrefix: redirect/dotkegg.net/
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: www.danwarecreations.com/products/dotkegg/
  NetWwwBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: www.dotkegg.net
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucketName
        LogFilePrefix: redirect/www.dotkegg.net/
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: www.danwarecreations.com/products/dotkegg/
          
  OrgBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: dotkegg.org
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucketName
        LogFilePrefix: redirect/dotkegg.org/
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: www.danwarecreations.com/products/dotkegg/
  OrgWwwBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: www.dotkegg.org
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucketName
        LogFilePrefix: redirect/www.dotkegg.org/
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: www.danwarecreations.com/products/dotkegg/
          
  ComBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: dotkegg.com
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucketName
        LogFilePrefix: redirect/dotkegg.com/
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: www.danwarecreations.com/products/dotkegg/
  ComWwwBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: www.dotkegg.com
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucketName
        LogFilePrefix: redirect/www.dotkegg.com/
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: www.danwarecreations.com/products/dotkegg/
      
  # Route 53 Record Set Groups
  NetDnsRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: dotkegg.net.
      Comment: redirect rules for the DotKEGG .net domain
      RecordSets:
      - # Redirect docs subdomain to DotKEGG website (ALIAS lets us not get charged!)
        Name: docs.dotkegg.net
        AliasTarget:
          DNSName: !GetAtt DocsDistribution.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
        Type: A   # Actually means CloudFront since this is an Alias record set
        # HealthCheckId: String
      - # Redirect zone apex to DotKEGG website (ALIAS lets us use zone apex, and not get charged!)
        Name: dotkegg.net
        AliasTarget:
          DNSName: s3-website.us-east-2.amazonaws.com
          HostedZoneId: Z2O1EMRO9K5GLX
        Type: A   # Actually means S3 since this is an Alias record set
        # HealthCheckId: String
      - # Redirect www subdomain to DotKEGG website (can't use CNAME since the target URL contains a path, and ALIAS adds no charge!)
        Name: www.dotkegg.net
        AliasTarget:
          DNSName: s3-website.us-east-2.amazonaws.com
          HostedZoneId: Z2O1EMRO9K5GLX
        Type: A   # Actually means S3 since this is an Alias record set
        # HealthCheckId: String
  OrgDnsRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: dotkegg.org.
      Comment: redirect rules for the DotKEGG .org domain
      RecordSets:
      - # Redirect docs subdomain to DotKEGG website (ALIAS lets us not get charged!)
        Name: docs.dotkegg.org
        AliasTarget:
          DNSName: !GetAtt DocsDistribution.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
        Type: A   # Actually means CloudFront since this is an Alias record set
        # HealthCheckId: String
      - # Redirect zone apex to DotKEGG website (ALIAS lets us use zone apex, and not get charged!)
        Name: dotkegg.org
        AliasTarget:
          DNSName: s3-website.us-east-2.amazonaws.com
          HostedZoneId: Z2O1EMRO9K5GLX
        Type: A   # Actually means S3 since this is an Alias record set
        # HealthCheckId: String
      - # Redirect www subdomain to DotKEGG website (can't use CNAME since the target URL contains a path, and ALIAS adds no charge!)
        Name: www.dotkegg.org
        AliasTarget:
          DNSName: s3-website.us-east-2.amazonaws.com
          HostedZoneId: Z2O1EMRO9K5GLX
        Type: A   # Actually means S3 since this is an Alias record set
        # HealthCheckId: String
  ComDnsRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: dotkegg.com.
      Comment: redirect rules for the DotKEGG .com domain
      RecordSets:
      - # Redirect docs subdomain to DotKEGG website (ALIAS lets us not get charged!)
        Name: docs.dotkegg.com
        AliasTarget:
          DNSName: !GetAtt DocsDistribution.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
        Type: A   # Actually means CloudFront since this is an Alias record set
        # HealthCheckId: String
      - # Redirect zone apex to DotKEGG website (ALIAS lets us use zone apex, and not get charged!)
        Name: dotkegg.com
        AliasTarget:
          DNSName: s3-website.us-east-2.amazonaws.com
          HostedZoneId: Z2O1EMRO9K5GLX
        Type: A   # Actually means S3 since this is an Alias record set
        # HealthCheckId: String
      - # Redirect www subdomain to DotKEGG website (can't use CNAME since the target URL contains a path, and ALIAS adds no charge!)
        Name: www.dotkegg.com
        AliasTarget:
          DNSName: s3-website.us-east-2.amazonaws.com
          HostedZoneId: Z2O1EMRO9K5GLX
        Type: A   # Actually means S3 since this is an Alias record set
        # HealthCheckId: String
          
Outputs:
  DocsHostBucket:
    Value: !Ref ComDocsBucket
    Description: Name of the new AWS S3 bucket that will host the static documentation.
  DocsDistribution:
    Value: !Ref DocsDistribution
    Description: ID of the new AWS CloudFront distribution that will cache the documentation at edge locations.
